apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    container: metrics-server
    environment: production
  name: metrics-server
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      container: metrics-server
      environment: production
  template:
    metadata:
      labels:
        container: metrics-server
        environment: production
    spec:
      containers:
        - args:
            - python
            - manage.py
            - metrics-server
            - --host
            - 0.0.0.0
            - --port
            - "6000"
          env:
            - name: API_BASE_URL
              valueFrom:
                configMapKeyRef:
                  key: API_BASE_URL
                  name: env
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  key: DB_HOST
                  name: env
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  key: DB_PORT
                  name: env
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: env
            - name: METRICS_SERVER_HOST
              valueFrom:
                configMapKeyRef:
                  key: METRICS_SERVER_HOST
                  name: env
          image: "{{ .Values.image.repo }}:{{ .Values.image.tag }}"
          name: metrics-server
          ports:
            - containerPort: 6000
      restartPolicy: Always
